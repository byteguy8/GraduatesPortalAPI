// <auto-generated />
using System;
using GraduatesPortalAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraduatesPortalAPI.Migrations
{
    [DbContext(typeof(PortalEgresadosContext))]
    partial class PortalEgresadosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraduatesPortalAPI.AccionUsuario", b =>
                {
                    b.Property<int>("AccionUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccionUsuarioId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("AccionUsuarioId")
                        .HasName("PK__AccionUs__2FAB39B432919605");

                    b.HasIndex(new[] { "Nombre" }, "UQ__AccionUs__75E3EFCF50394538")
                        .IsUnique();

                    b.ToTable("AccionUsuario", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Ciudad", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("CiudadId")
                        .HasName("PK__Ciudad__E826E7704F3C99E8");

                    b.HasIndex("PaisId");

                    b.ToTable("Ciudad", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Contacto", b =>
                {
                    b.Property<int>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactoId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Mostrar")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoContactoId")
                        .HasColumnType("int");

                    b.HasKey("ContactoId")
                        .HasName("PK__Contacto__8E0F85E8F9C2CE9C");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("TipoContactoId");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Contacto__75E3EFCF83F1428E")
                        .IsUnique();

                    b.ToTable("Contacto", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Direccion", b =>
                {
                    b.Property<int>("DireccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DireccionId"));

                    b.Property<string>("DireccionPrincipal")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("LocalidadPostalId")
                        .HasColumnType("int");

                    b.Property<bool?>("MostrarDireccionPrincipal")
                        .HasColumnType("bit");

                    b.HasKey("DireccionId")
                        .HasName("PK__Direccio__68906D64D7C69BF2");

                    b.HasIndex("LocalidadPostalId");

                    b.ToTable("Direccion", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.DocumentoEgresado", b =>
                {
                    b.Property<int>("DocumentoEgresadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentoEgresadoId"));

                    b.Property<string>("DocumentoNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("EgresadoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Mostrar")
                        .HasColumnType("bit");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("DocumentoEgresadoId")
                        .HasName("PK__Document__3AED1AA2BCA6964C");

                    b.HasIndex("EgresadoId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex(new[] { "DocumentoNo" }, "UQ__Document__5DDB97EC46F6D48F")
                        .IsUnique();

                    b.ToTable("DocumentoEgresado", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Educacion", b =>
                {
                    b.Property<int>("EducacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducacionId"));

                    b.Property<int>("EgresadoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("date");

                    b.Property<int>("FormacionId")
                        .HasColumnType("int");

                    b.Property<bool?>("Mostrar")
                        .HasColumnType("bit");

                    b.Property<string>("Organizacion")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.HasKey("EducacionId")
                        .HasName("PK__Educacio__6301DF6E612BB3E4");

                    b.HasIndex("EgresadoId");

                    b.HasIndex("FormacionId");

                    b.ToTable("Educacion", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Egresado", b =>
                {
                    b.Property<int>("EgresadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EgresadoId"));

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("date");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("MatriculaEgresado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("MatriculaGrado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<int>("Nacionalidad")
                        .HasColumnType("int");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("EgresadoId")
                        .HasName("PK__Egresado__CE4D75864EA655F1");

                    b.HasIndex("Nacionalidad");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Egresado", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.EgresadoDestacado", b =>
                {
                    b.Property<int>("EgresadoDestacadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EgresadoDestacadoId"));

                    b.Property<int>("EgresadoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.HasKey("EgresadoDestacadoId")
                        .HasName("PK__Egresado__C3C0C83CDD6258B7");

                    b.HasIndex("EgresadoId");

                    b.ToTable("EgresadoDestacado", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.EgresadoHabilidad", b =>
                {
                    b.Property<int>("EgresadoHabilidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EgresadoHabilidadId"));

                    b.Property<int>("EgresadoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("HabilidadId")
                        .HasColumnType("int");

                    b.Property<bool?>("Mostrar")
                        .HasColumnType("bit");

                    b.HasKey("EgresadoHabilidadId")
                        .HasName("PK__Egresado__7107424831F03983");

                    b.HasIndex("EgresadoId");

                    b.HasIndex("HabilidadId");

                    b.ToTable("EgresadoHabilidad", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.EgresadoIdioma", b =>
                {
                    b.Property<int>("EgresadoIdiomaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EgresadoIdiomaId"));

                    b.Property<int>("EgresadoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<bool?>("Mostrar")
                        .HasColumnType("bit");

                    b.HasKey("EgresadoIdiomaId")
                        .HasName("PK__Egresado__95C75C4281B1C1DB");

                    b.HasIndex("EgresadoId");

                    b.HasIndex("IdiomaId");

                    b.ToTable("EgresadoIdioma", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.ExperienciaLaboral", b =>
                {
                    b.Property<int>("ExperienciaLaboralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienciaLaboralId"));

                    b.Property<int>("EgresadoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("date");

                    b.Property<bool?>("Mostrar")
                        .HasColumnType("bit");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("Salario")
                        .HasColumnType("int");

                    b.HasKey("ExperienciaLaboralId")
                        .HasName("PK__Experien__90603FE69EAB7BA0");

                    b.HasIndex("EgresadoId");

                    b.ToTable("ExperienciaLaboral", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Formacion", b =>
                {
                    b.Property<int>("FormacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormacionId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("FormacionId")
                        .HasName("PK__Formacio__10CF6859CCD0996A");

                    b.HasIndex("NivelId");

                    b.ToTable("Formacion", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Habilidad", b =>
                {
                    b.Property<int>("HabilidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HabilidadId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("HabilidadId")
                        .HasName("PK__Habilida__7341FE2241250182");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Habilida__75E3EFCF21DFB275")
                        .IsUnique();

                    b.ToTable("Habilidad", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Idioma", b =>
                {
                    b.Property<int>("IdiomaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdiomaId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ISO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdiomaId")
                        .HasName("PK__Idioma__7341FE2241250182");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Idioma__75E3EFCF21DFB275")
                        .IsUnique();

                    b.ToTable("Idioma", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.LocalidadPostal", b =>
                {
                    b.Property<int>("LocalidadPostalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalidadPostalId"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LocalidadPostalId")
                        .HasName("PK__Localida__A44BA845A4C0BA84");

                    b.HasIndex("CiudadId");

                    b.ToTable("LocalidadPostal", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.LogUsuario", b =>
                {
                    b.Property<int>("LogUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogUsuarioId"));

                    b.Property<int>("AccionUsuarioId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("LogUsuarioId")
                        .HasName("PK__LogUsuar__7DCF8168A2985296");

                    b.HasIndex("AccionUsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogUsuario", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Nivel", b =>
                {
                    b.Property<int>("NivelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NivelId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Prioridad")
                        .HasColumnType("int");

                    b.HasKey("NivelId")
                        .HasName("PK__Nivel__316FA27709A6853B");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Nivel__75E3EFCF90705A45")
                        .IsUnique();

                    b.ToTable("Nivel", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Pais", b =>
                {
                    b.Property<int>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaisId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("GenticilioNac")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("ISO")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("PaisId")
                        .HasName("PK__Pais__B501E185CD29A4C1");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Pais__75E3EFCF4244D8B7")
                        .IsUnique();

                    b.HasIndex(new[] { "Iso" }, "UQ__Pais__C4979A232DBAEF01")
                        .IsUnique();

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Participante", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipanteId"));

                    b.Property<int>("DireccionId")
                        .HasColumnType("int");

                    b.Property<bool?>("EsEgresado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("text")
                        .HasColumnName("FotoPerfilURL");

                    b.Property<int>("TipoParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ParticipanteId")
                        .HasName("PK__Particip__E6DEAC5F1F0D7968");

                    b.HasIndex("DireccionId");

                    b.HasIndex("TipoParticipanteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Participante", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("RolId")
                        .HasName("PK__Rol__F92302F17E975A95");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Rol__75E3EFCF3B6CB729")
                        .IsUnique();

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.TipoContacto", b =>
                {
                    b.Property<int>("TipoContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoContactoId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("TipoContactoId")
                        .HasName("PK__TipoCont__2A6E82DC9EF1EDFF");

                    b.HasIndex(new[] { "Nombre" }, "UQ__TipoCont__75E3EFCFEAED2FDE")
                        .IsUnique();

                    b.ToTable("TipoContacto", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.TipoDocumento", b =>
                {
                    b.Property<int>("TipoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDocumentoId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("TipoDocumentoId")
                        .HasName("PK__TipoDocu__A329EA87104DF547");

                    b.HasIndex(new[] { "Nombre" }, "UQ__TipoDocu__75E3EFCFAF9FB396")
                        .IsUnique();

                    b.ToTable("TipoDocumento", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.TipoParticipante", b =>
                {
                    b.Property<int>("TipoParticipanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoParticipanteId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("TipoParticipanteId")
                        .HasName("PK__TipoPart__5CEAA5C3AA8B36BA");

                    b.HasIndex(new[] { "Nombre" }, "UQ__TipoPart__75E3EFCFAB065D36")
                        .IsUnique();

                    b.ToTable("TipoParticipante", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuario__2B3DE798F7564030");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("GraduatesPortalAPI.Ciudad", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Pais", "Pais")
                        .WithMany("Ciudads")
                        .HasForeignKey("PaisId")
                        .IsRequired()
                        .HasConstraintName("FK__Ciudad__PaisId__2E1BDC42");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Contacto", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Participante", "Participante")
                        .WithMany("Contactos")
                        .HasForeignKey("ParticipanteId")
                        .IsRequired()
                        .HasConstraintName("FK__Contacto__Partic__37703C52");

                    b.HasOne("GraduatesPortalAPI.TipoContacto", "TipoContacto")
                        .WithMany("Contactos")
                        .HasForeignKey("TipoContactoId")
                        .IsRequired()
                        .HasConstraintName("FK__Contacto__TipoCo__3864608B");

                    b.Navigation("Participante");

                    b.Navigation("TipoContacto");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Direccion", b =>
                {
                    b.HasOne("GraduatesPortalAPI.LocalidadPostal", "LocalidadPostal")
                        .WithMany("Direccions")
                        .HasForeignKey("LocalidadPostalId")
                        .IsRequired()
                        .HasConstraintName("FK__Direccion__Local__3C69FB99");

                    b.Navigation("LocalidadPostal");
                });

            modelBuilder.Entity("GraduatesPortalAPI.DocumentoEgresado", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Egresado", "Egresado")
                        .WithMany("DocumentoEgresados")
                        .HasForeignKey("EgresadoId")
                        .IsRequired()
                        .HasConstraintName("FK__Documento__Egres__7D439ABD");

                    b.HasOne("GraduatesPortalAPI.TipoDocumento", "TipoDocumento")
                        .WithMany("DocumentoEgresados")
                        .HasForeignKey("TipoDocumentoId")
                        .IsRequired()
                        .HasConstraintName("FK__Documento__TipoD__7C4F7684");

                    b.Navigation("Egresado");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Educacion", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Egresado", "Egresado")
                        .WithMany("Educacions")
                        .HasForeignKey("EgresadoId")
                        .IsRequired()
                        .HasConstraintName("FK__Educacion__Egres__29221CFB");

                    b.HasOne("GraduatesPortalAPI.Formacion", "Formacion")
                        .WithMany("Educacions")
                        .HasForeignKey("FormacionId")
                        .IsRequired()
                        .HasConstraintName("FK__Educacion__Forma__2A164134");

                    b.Navigation("Egresado");

                    b.Navigation("Formacion");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Egresado", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Pais", "NacionalidadNavigation")
                        .WithMany("Egresados")
                        .HasForeignKey("Nacionalidad")
                        .IsRequired()
                        .HasConstraintName("FK__Egresado__Nacion__6D0D32F4");

                    b.HasOne("GraduatesPortalAPI.Participante", "Participante")
                        .WithMany("Egresados")
                        .HasForeignKey("ParticipanteId")
                        .IsRequired()
                        .HasConstraintName("FK__Egresado__Partic__6C190EBB");

                    b.Navigation("NacionalidadNavigation");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("GraduatesPortalAPI.EgresadoDestacado", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Egresado", "Egresado")
                        .WithMany("EgresadoDestacados")
                        .HasForeignKey("EgresadoId")
                        .IsRequired()
                        .HasConstraintName("FK__EgresadoD__Egres__4B7734FF");

                    b.Navigation("Egresado");
                });

            modelBuilder.Entity("GraduatesPortalAPI.EgresadoHabilidad", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Egresado", "Egresado")
                        .WithMany("EgresadoHabilidads")
                        .HasForeignKey("EgresadoId")
                        .IsRequired()
                        .HasConstraintName("FK__EgresadoH__Egres__44CA3770");

                    b.HasOne("GraduatesPortalAPI.Habilidad", "Habilidad")
                        .WithMany("EgresadoHabilidads")
                        .HasForeignKey("HabilidadId")
                        .IsRequired()
                        .HasConstraintName("FK__EgresadoH__Habil__45BE5BA9");

                    b.Navigation("Egresado");

                    b.Navigation("Habilidad");
                });

            modelBuilder.Entity("GraduatesPortalAPI.EgresadoIdioma", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Egresado", "Egresado")
                        .WithMany("EgresadoIdiomas")
                        .HasForeignKey("EgresadoId")
                        .IsRequired()
                        .HasConstraintName("FK__EgresadoI__Egres__0A9D95DB");

                    b.HasOne("GraduatesPortalAPI.Idioma", "Idioma")
                        .WithMany("EgresadoIdiomas")
                        .HasForeignKey("IdiomaId")
                        .IsRequired()
                        .HasConstraintName("FK__EgresadoI__Idiom__0B91BA14");

                    b.Navigation("Egresado");

                    b.Navigation("Idioma");
                });

            modelBuilder.Entity("GraduatesPortalAPI.ExperienciaLaboral", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Egresado", "Egresado")
                        .WithMany("ExperienciaLaborals")
                        .HasForeignKey("EgresadoId")
                        .IsRequired()
                        .HasConstraintName("FK__Experienc__Egres__14270015");

                    b.Navigation("Egresado");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Formacion", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Nivel", "Nivel")
                        .WithMany("Formacions")
                        .HasForeignKey("NivelId")
                        .IsRequired()
                        .HasConstraintName("FK__Formacion__Nivel__22751F6C");

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("GraduatesPortalAPI.LocalidadPostal", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Ciudad", "Ciudad")
                        .WithMany("LocalidadPostals")
                        .HasForeignKey("CiudadId")
                        .IsRequired()
                        .HasConstraintName("FK__Localidad__Ciuda__34C8D9D1");

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("GraduatesPortalAPI.LogUsuario", b =>
                {
                    b.HasOne("GraduatesPortalAPI.AccionUsuario", "AccionUsuario")
                        .WithMany("LogUsuarios")
                        .HasForeignKey("AccionUsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__LogUsuari__Accio__5535A963");

                    b.HasOne("GraduatesPortalAPI.Usuario", "Usuario")
                        .WithMany("LogUsuarios")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__LogUsuari__Usuar__5441852A");

                    b.Navigation("AccionUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Participante", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Direccion", "Direccion")
                        .WithMany("Participantes")
                        .HasForeignKey("DireccionId")
                        .IsRequired()
                        .HasConstraintName("FK__Participa__Direc__6477ECF3");

                    b.HasOne("GraduatesPortalAPI.TipoParticipante", "TipoParticipante")
                        .WithMany("Participantes")
                        .HasForeignKey("TipoParticipanteId")
                        .IsRequired()
                        .HasConstraintName("FK__Participa__TipoP__628FA481");

                    b.HasOne("GraduatesPortalAPI.Usuario", "Usuario")
                        .WithMany("Participantes")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Participa__Usuar__6383C8BA");

                    b.Navigation("Direccion");

                    b.Navigation("TipoParticipante");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Usuario", b =>
                {
                    b.HasOne("GraduatesPortalAPI.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK__Usuario__RolId__47DBAE45");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("GraduatesPortalAPI.AccionUsuario", b =>
                {
                    b.Navigation("LogUsuarios");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Ciudad", b =>
                {
                    b.Navigation("LocalidadPostals");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Direccion", b =>
                {
                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Egresado", b =>
                {
                    b.Navigation("DocumentoEgresados");

                    b.Navigation("Educacions");

                    b.Navigation("EgresadoDestacados");

                    b.Navigation("EgresadoHabilidads");

                    b.Navigation("EgresadoIdiomas");

                    b.Navigation("ExperienciaLaborals");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Formacion", b =>
                {
                    b.Navigation("Educacions");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Habilidad", b =>
                {
                    b.Navigation("EgresadoHabilidads");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Idioma", b =>
                {
                    b.Navigation("EgresadoIdiomas");
                });

            modelBuilder.Entity("GraduatesPortalAPI.LocalidadPostal", b =>
                {
                    b.Navigation("Direccions");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Nivel", b =>
                {
                    b.Navigation("Formacions");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Pais", b =>
                {
                    b.Navigation("Ciudads");

                    b.Navigation("Egresados");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Participante", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("Egresados");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("GraduatesPortalAPI.TipoContacto", b =>
                {
                    b.Navigation("Contactos");
                });

            modelBuilder.Entity("GraduatesPortalAPI.TipoDocumento", b =>
                {
                    b.Navigation("DocumentoEgresados");
                });

            modelBuilder.Entity("GraduatesPortalAPI.TipoParticipante", b =>
                {
                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("GraduatesPortalAPI.Usuario", b =>
                {
                    b.Navigation("LogUsuarios");

                    b.Navigation("Participantes");
                });
#pragma warning restore 612, 618
        }
    }
}
